// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// CategoryRelationDao is the data access object for table category_relation.
type CategoryRelationDao struct {
	table   string                  // table is the underlying table name of the DAO.
	group   string                  // group is the database configuration group name of current DAO.
	columns CategoryRelationColumns // columns contains all the column names of Table for convenient usage.
}

// CategoryRelationColumns defines and stores column names for table category_relation.
type CategoryRelationColumns struct {
	Id         string //
	CategoryId string // 分类ID
	Type       string // 类型 1-文章
	RelateId   string // 关联ID
	IsDelete   string // 删除 0-否 1-是
	CreateTime string // 创建时间
	UpdateTime string // 更新时间
	UpdateAt   string // 变更时间
}

// categoryRelationColumns holds the columns for table category_relation.
var categoryRelationColumns = CategoryRelationColumns{
	Id:         "id",
	CategoryId: "category_id",
	Type:       "type",
	RelateId:   "relate_id",
	IsDelete:   "is_delete",
	CreateTime: "create_time",
	UpdateTime: "update_time",
	UpdateAt:   "update_at",
}

// NewCategoryRelationDao creates and returns a new DAO object for table data access.
func NewCategoryRelationDao() *CategoryRelationDao {
	return &CategoryRelationDao{
		group:   "default",
		table:   "category_relation",
		columns: categoryRelationColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *CategoryRelationDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *CategoryRelationDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *CategoryRelationDao) Columns() CategoryRelationColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *CategoryRelationDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *CategoryRelationDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *CategoryRelationDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
